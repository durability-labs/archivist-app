name: Playwright Tests

on:
  push:
    branches: [main, feat/tests/test-init, releases/*]
  pull_request:
    branches: [main, releases/*]
  workflow_dispatch:

env:
  archivist_version: v0.0.1
  circuit_version: v0.0.1
  bootstrap_node_url: https://spr.archivist.storage/testnet
  eth_provider: https://rpc.testnet.archivist.storage
  marketplace_address_url: https://marketplace.archivist.storage/archivist-testnet/latest
  VITE_ARCHIVIST_API_URL: ${{ secrets.VITE_ARCHIVIST_API_URL }}
  VITE_GEO_IP_URL: ${{ secrets.VITE_GEO_IP_URL }}

jobs:
  tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        if: false
        run: sudo apt update && sudo apt install libgomp1

      - name: Setup env variables
        if: false
        run: |
          echo "platform=${RUNNER_OS,,}" >> $GITHUB_ENV
          echo "architecture=$([[ $RUNNER_ARCH == 'X64' ]] && echo amd64 || echo ${RUNNER_ARCH,,})" >> $GITHUB_ENV

      - name: Restore cached circuits
        if: false
        id: circuits-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            datadir/circuits
          key: ${{ env.circuit_version }}-circuits

      - name: Download circuits
        if: false
        # if: steps.circuits-cache-restore.outputs.cache-hit != 'true'
        run: |
          mkdir -p datadir/circuits
          chmod 700 datadir
          chmod 700 datadir/circuits
          curl -OL https://github.com/durability-labs/archivist-node/releases/download/${circuit_version}/cirdl-${circuit_version}-${platform}-${architecture}.tar.gz
          tar -xvf cirdl-${circuit_version}-${platform}-${architecture}.tar.gz
          chmod +x cirdl-${circuit_version}-${platform}-${architecture}
          ./cirdl-${circuit_version}-${platform}-${architecture} ./datadir/circuits ${eth_provider} ${marketplace_address}

      - name: Cache circuits
        if: false
        id: circuits-cache
        uses: actions/cache/save@v4
        with:
          path: datadir/circuits
          key: ${{ steps.circuits-cache-restore.outputs.cache-primary-key }}

      - name: Restore cached archivist
        if: false
        id: archivist-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ./archivist-${{ env.archivist_version }}-${{ env.platform }}-${{ env.architecture }}
          key: ${{ env.archivist_version }}-archivist

      - name: Download archivist
        if: false
        # if: steps.archivist-cache-restore.outputs.cache-hit != 'true'
        run: |
          curl -LO https://github.com/durability-labs/archivist-node/releases/download/${archivist_version}/archivist-${archivist_version}-${platform}-${architecture}.tar.gz
          curl -LO https://github.com/durability-labs/archivist-node/releases/download/${archivist_version}/archivist-${archivist_version}-${platform}-${architecture}.tar.gz.sha256
          sha256sum -c archivist-${archivist_version}-${platform}-${architecture}.tar.gz.sha256
          [[ $? -eq 0 ]] && { echo "Checksum is OK"; } || { echo "Checksum failed"; exit 1; }
          tar -zxvf archivist-${archivist_version}-${platform}-${architecture}.tar.gz

      - name: Cache archivist
        if: false
        id: archivist-cache
        uses: actions/cache/save@v4
        with:
          path: ./archivist-${{ env.archivist_version }}-${{ env.platform }}-${{ env.architecture }}
          key: ${{ steps.archivist-cache-restore.outputs.cache-primary-key }}

      - name: Run Codex node
        if: false
        run: |
          # Get an eth address
          response=$(curl -s https://key.archivist.storage)
          awk -F ': ' '/private/ {print $2}' <<<"${response}" > eth.key
          awk -F ': ' '/address/ {print $2}' <<<"${response}" > eth.address
          chmod 600 eth.key

          # Run 
          ./archivist-${archivist_version}-${platform}-${architecture} --data-dir=./datadir --bootstrap-node=${bootstrap_node} --nat=any --disc-port=8090 --api-cors-origin="*" persistence --eth-provider=${eth_provider} --eth-private-key=./eth.key --marketplace-address=${marketplace_address} &

          sleep 15

      - name: Check Codex API
        if: false
        run: |
          curl --max-time 10 --fail localhost:8080/api/archivist/v1/debug/info -w "\n"
          [[ $? -eq 0 ]] && { echo "Codex node is up"; } || { echo "Please check Codex node"; exit 1; }

      - uses: actions/checkout@v4
        if: false

      - uses: actions/setup-node@v4
        if: false
        with:
          node-version: lts/*

      - uses: actions/cache@v4
        if: false
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: false
        run: npm ci

      - name: Build
        if: false
        run: npm run build

      - name: Install Playwright Browsers
        if: false
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        if: false
        run: npm run test

      - uses: actions/upload-artifact@v4
        if: false
        # if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
